-----------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/Windows/Documents/5. Research/TFG EI/log/2a_Data_cleaning_cps_30Jun2022.txt
  log type:  text
 opened on:  30 Jun 2022, 10:25:31

. 
.         
. 
. /***************************************************************************
>                                  CPS DATA
> ****************************************************************************/
. 
. * ----- ASEC data ---------------------------------------------------------*
.         use "${raw}/cps_asec_raw.dta", clear 

.         
.         *** TECHNICAL VARIABLES
.         rename year survey_year

.         
.         *** GEOGRAPHICAL VARIABLES
.         * Delete observations that do not have an identified county
.         drop if county==0
(1,639,078 observations deleted)

.         
.         * Create variable with consistent 5-digit string FIPS code
.         gen fips = string(county,"%05.0f") // Previously, some states missed front 0

.         drop county

.         
.         * Recode missing and negative values (might be lost investments)
.         replace ftotval = . if ftotval == 9999999999 | ftotval<0
(702 real changes made, 702 to missing)

.         
.         * Generate round weight
.         gen wr = .
(1,203,135 missing values generated)

.         replace wr = round(asecwt)
(1,203,135 real changes made)

.         
.         
.         // County-level
.         preserve

.                 collapse (mean) county_inc= ftotval /// 
>                 [w=wr], by(fips survey_year)
(analytic weights assumed)

.                 
.                 save "${temp}/county_income.dta", replace
file C:/Users/Windows/Documents/5. Research/TFG EI/data/temp/county_income.dta saved

.         restore

.         
.         /*
>         // State-level
>          collapse (mean) state_inc= ftotval /// 
>                 [w=wr], by(statefip survey_year)
>                 
>         save "${temp}/state_income.dta", replace
>         */
. 
. 
. *------ Common data cleaning for all CPS supplements -----------------------*
. 
. local supplements voters civic volunteer

. 
. foreach s of local supplements {
  2.         
.         use "${raw}/cps_`s'_raw.dta", clear 
  3.         
.         *** TECHNICAL VARIABLES
.         rename year survey_year
  4.         rename month survey_month
  5.         
.         
.         gen survey_date = ym(survey_year, survey_month)
  6. 
.         
.         *** GEOGRAPHICAL VARIABLES
.         * Delete observations that do not have an identified county
.         drop if county==0
  7.         
.         * Create variable with consistent 5-digit string FIPS code
.         gen fips = string(county,"%05.0f") // Previously, some states missed front 0
  8.         drop county
  9.                 
.         *** SOCIO-ECONOMIC AND DEMOGRAPHIC VARIABLES
.         
.         * Recode family income and dummy for low income individuals
.         replace faminc = . if inrange(faminc,995,998)
 10.         
.         gen below50k = 0 
 11.         replace below50k = 1 if faminc < 800 // Low income
 12.         
.         * Recode sex
.         gen female= sex-1
 13.         drop sex
 14.         
.         * Dummy for single
.         gen single = 0
 15.         replace single = 1 if marst==6
 16.         replace single = . if marst==9
 17.         
.         * Dummy for education: high school or less, more than high school
.         gen lowed = 0
 18.         replace lowed = 1 if (educ <= 73)
 19.         replace lowed = . if (educ==000|educ==001|educ==999)
 20.         
.         gen highed = 0
 21.         replace highed = 1 if educ >73
 22.         replace highed = . if (educ==000|educ==001|educ==999)
 23.         
.         
.         // Race and ethnicity
.         
.         * Dummy for White
.         gen white = 0
 24.         replace white = 1 if race==100
 25.         
.         * Dummy for Black
.         gen black = 0
 26.         replace black = 1 if race==200
 27.         
.         * Dummy for Hispanic
.         gen hispanic = 1
 28.         replace hispanic = 0 if (hispan==000)
 29.         
.         * Dummy for non-Hispanic white
.         gen nonhispwhite = 0
 30.         replace nonhispwhite = 1 if (hispanic==0 & white==1)
 31.         
.         * Dummy for non-Hispanic black
.         gen nonhispblack = 0
 32.         replace nonhispblack = 1 if (hispanic==0 & black==1)
 33.         
.         * Dummy for Mexican
.         gen mexican = 0
 34.         replace mexican = 1 if hispan==100
 35.         
.         // Immigration status
.         
.         * Dummy for non-citizens
.         gen noncitizen = 0 
 36.         replace noncitizen = 1 if citizen==5
 37.                 
.         * Dummy for naturalized citizens
.         gen naturalized = 0
 38.         replace naturalized = 1 if citizen==4
 39.         
.         * Dummy for immigrants
.         gen immigrant = 0
 40.         replace immigrant = 1 if (citizen==4 | citizen==5)
 41.         
.         * Dummy for natives
.         gen native = 0
 42.         replace native = 1 if inrange(citizen,1,3)
 43.         
.         * Years in the US: NOT REALLY TRUST WORTHY DUE TO CODING OF CPS
.         gen yearsus = survey_year-yrimmig if native==0
 44.         replace yearsus=. if yrimmig==0000
 45.         replace yearsus= age if native==1
 46.         
.         
. 
.                 
.         * Mixed-status Household
.         
.         // Defined as different citizenship status (see Bitler and Hoynes, 2011)
.          egen citizens_household = total(noncitizen==0), by(cpsid survey_year)
 47.          egen totindv_household = total(cpsid != .), by(cpsid survey_year)
 48.          egen mixedstatus = count(totindv_household > citizens_household), by(cpsid survey_year)
 49.         
.         /*
>         // Defined as at least one likely undocumented migrant (see Amuedo-Dorantes and Lopez) --> this is a proxy (less reliable)
>         
>         * Dummy for likely unauthorized migrant
>         gen likely_unauthorized = 0
>         replace likely_unauthorized = 1 if (noncitizen==1 & hispanic==1 & lowed==1 & yearsus>5 )
>         
>         egen likely_mixedstatus = total(likely_unauthorized==1), by(cpsid survey_year)
>         replace likely_mixedstatus = 1 if likely_mixedstatus > 1 // 1.69%
>         
>         
>         
>         *** COUNTY AND STATE CONTROLS:
>         
>         // Round weight and rename s.t. it is the same in every supplement
>         gen wr = .
>         
>         if "`s'" == "voters" {
>                 replace wr = round(vosuppwt)
>         }
>         if "`s'" == "civic" {
>                 replace wr = round(cesuppwt)
>         }
>         if "`s'" == "volunteer"{
>                 replace wr = round(vlsuppwt)
>         }
> 
>                 
>         * Dummy for presidential election
>         gen presidential = 0
>         replace presidential = 1 if (survey_year==2004|survey_year==2008|survey_year==2012|survey_year==2016)
>         
>          
>         // County-level controls: likely share of MS, median household income
>         preserve
>                 collapse (mean) county_MS=likely_mixedstatus county_unauthorized = likely_unauthorized [w=wr], by(fips survey_year)
>                 
>                 tempfile countychars_cps
>                 save `countychars_cps'
>         restore
>         merge m:1 fips survey_year using `countychars_cps'
>         drop _merge
>         
>         
>         // State-level controls: likely share of MS, median household income
>         preserve
>                 collapse (mean) state_MS=likely_mixedstatus  /// 
>                 [w=wr], by(statefip survey_year)
>                 
>                 tempfile statechars_cps
>                 save `statechars_cps'
>         restore
>         merge m:1 statefip survey_year using `statechars_cps'
>         drop _merge
>         
> 
>         // Reduce dataset
>         compress        
>         save "${temp}/cps_`s'_temp.dta", replace
>         
>         */
. }
file C:/Users/Windows/Documents/5. Research/TFG EI/data/raw/cps_voters_raw.dta not found
r(601);

end of do-file

r(601);

